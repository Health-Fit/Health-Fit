<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heemin.ws.model.dao.ExerciseVideoDao">

    <select id="selectAll" resultType="ExerciseVideo">
        SELECT * FROM exercise_video
        WHERE deleted = false;
    </select>

    <select id="selectByCondition" resultType="ExerciseVideo">
        SELECT *
        FROM exercise_video
        WHERE deleted = false
        <if test="categoryId != 0">
            AND id IN (
            SELECT exercise_video_id
            FROM exercise_video_category
            WHERE exercise_category_id = #{categoryId}
            )
        </if>
        <if test="searchValue != null">
            AND title LIKE CONCAT('%', #{searchValue}, '%')
        </if>
        ORDER BY view_cnt;
    </select>

    <select id="selectSample" resultType="ExampleVideo">
        SELECT * FROM exercise_video_ex;
    </select>

    <select id="selectById" parameterType="long" resultType="ExerciseVideo">
        SELECT * FROM exercise_video
        WHERE id = #{id} AND deleted = false;
    </select>

    <update id="updateViewCnt" parameterType="long">
        UPDATE exercise_video
        SET view_cnt = view_cnt + 1
        WHERE id = #{id};
    </update>

    <select id="selectByCategory" parameterType="int" resultType="ExerciseVideo">
        SELECT * FROM exercise_video
        WHERE id IN (SELECT exercise_video_id FROM exercise_video_category WHERE exercise_category_id = #{categoryId})
        AND deleted = false;
    </select>

    <select id="selectOrderByView" resultType="ExerciseVideo">
        SELECT * FROM exercise_video
        WHERE deleted = false
        ORDER BY view_cnt;
    </select>

    <select id="selectByLike" parameterType="long" resultType="ExerciseVideo">
        SELECT ev.id AS id, ev.title AS title, ev.url AS url, ev.view_cnt AS view_cnt, ev.review_cnt AS review_cnt,
        ev.reg_date AS reg_date, ev.deleted AS deleted
        FROM exercise_video_like evl
        JOIN exercise_video ev ON evl.exercise_video_id = ev.id
        WHERE evl.member_id = #{memberId} AND ev.deleted = false
        ORDER BY evl.reg_date DESC;
    </select>

    <select id="checkLiked" resultType="int">
        SELECT COUNT(*) FROM exercise_video_like
        WHERE exercise_video_id = #{videoId}
        AND member_id = #{memberId};
    </select>

    <select id="checkBlocked" resultType="int">
        SELECT COUNT(*) FROM exercise_video_block
        WHERE exercise_video_id = #{videoId}
        AND member_id = #{memberId};
    </select>

    <insert id="insertLike">
        INSERT INTO exercise_video_like (member_id, exercise_video_id)
        VALUES (#{memberId}, #{videoId});
    </insert>

    <delete id="deleteLike">
        DELETE FROM exercise_video_like
        WHERE member_id = #{memberId} AND exercise_video_id = #{videoId};
    </delete>

    <insert id="insertBlock">
        INSERT INTO exercise_video_block (member_id, exercise_video_id)
        VALUES (#{memberId}, #{videoId});
    </insert>

    <delete id="deleteBlock">
        DELETE FROM exercise_video_block
        WHERE member_id = #{memberId} AND exercise_video_id = #{videoId};
    </delete>

    <update id="updateDelete" parameterType="long">
        UPDATE exercise_video
        SET deleted = true
        WHERE id = #{id};
    </update>
</mapper>
